[versions]
#=====configSdk=====#
compileSdkVersion = "34"
minSdkVersion = "28"
protobufJava = "4.30.2"
targetSdkVersion = "34"
#=====应用常规依赖=====#
application = "8.5.0"
appcompat = "1.4.1"
annotation = "1.2.0"
legacysupport = "1.0.0"
cardview = "1.0.0"
recyclerview = "1.2.1"
material = "1.5.0"
fragment = "1.5.6"
constraintlayout = "2.1.3"
navigation = "2.6.0"
lifecycle = "2.8.7"
activityktx = "1.5.1"
hilt = "2.49"
paging = "3.0.0"
room = "2.6.1"
retrofit = "2.9.0"
okhttp3 = "4.10.0"
workmanager = "2.8.0"
kotlin = "1.9.0"
corektx = "1.10.1"
stdlib = "0.33.0"
coroutine = "1.5.0"
timber = "4.7.1"
glide = "4.11.0"
coil = "1.4.0"
coilCompose = "2.2.2"
security = "1.0.0"
composektx = "2023.01.00"
constraintlayoutcompose = "1.0.1"
composablesCore = "1.19.1"
#=====第三方辅助=====#
leakcanary = "2.4"
permissionx = "1.4.0"
glance = "1.1.0"
clearEditText = "1.0.6"
qrcode = "3.4.1"
groupedRecycler = "2.4.1"
commons-codec = "1.11"
cymChad = "3.0.4"
scwang = "2.1.1"
glideLibrary = "4.12.0"
glideTransformations = "4.3.0"
#=====单元测试=====#
junit = "4.13.2"
extjunit = "1.1.3"
testcore = "1.0.0"
mockito = "1.10.19"
robolectric = "4.9"
runner = "1.1.0"
espresso = "3.4.0"
truth = "0.42"
mockk = "1.11.0"
coretesting = "2.1.0"
kotlinxcoroutinestest = "1.6.1"
#=====组件库=====#
lib_utils = "1.0.1.202301121457"
lib_widget = "1.0.1.202301121525"
hmicomponents = "1.0.0.202211301601"
systemarch = "0.0.1"
vdbus = "0.0.147"
sv_button = "1.0.0.202306011200"
sv_dialog = "1.0.0.202306011200"
sv_progress_bar = "1.0.0.202306011200"
sv_seekbar = "1.0.0.202306011200"
sv_switch = "1.0.0.202306011527"
sv_tab_layout = "1.0.0.202306011200"
sv_time_selector = "1.0.0.202306011200"
kotlin-bom = "1.8.0"
composeHiltNavigation = "1.2.0"
foundation = "1.6.0"
sv-account-sdk = "1.0.2"
sv-bigdata-sdk-version = "0.0.5"
sv-bouncycastle = "1.79"
licenses_online = "0.0.12"
licenses_desaysv = "0.0.8"
okhttputils = "2.6.2"
aha-mmkv = "2.1.0"
#==================================================================================================#

[libraries]
#=====应用常规依赖 implementation =====#
gradle = { module = "com.android.tools.build:gradle", version.ref = "application" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "annotation" }
androidx-legacysupport = { module = "androidx.legacy:legacy-support-v4", version.ref = "legacysupport" }
androidx-cardview = { module = "androidx.cardview:cardview", version.ref = "cardview" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerview" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }
androidx-material = { module = "com.google.android.material:material", version.ref = "material" }
androidx-fragment = { module = "androidx.fragment:fragment", version.ref = "fragment" }

#kotlin-coroutine
kotlin-core = { module = "androidx.core:core-ktx", version.ref = "corektx" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "stdlib" }
kotlin-coroutine = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutine" }

#kotlin-compose
kotlin-compose = { module = "androidx.compose:compose-bom", version.ref = "composektx" }

#==================================================================================================#

#=====Jetpact implementation =====#
#navigation
navigation-fragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
navigation-ui = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation" }
#lifecycle:[viewmodel,livedata]
lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycle-livedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
#viewModel by viewModels()
activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "activityktx" }
#hilt implementation
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
#hilt kapt
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }
#paging
paging = { module = "androidx.paging:paging-runtime", version.ref = "paging" }
#room
protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "protobufJava" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
#room kapt
room-kapt = { module = "androidx.room:room-compiler", version.ref = "room" }
#workmanager
workmanager = { module = "androidx.work:work-runtime-ktx", version.ref = "workmanager" }

#=====compose =====#
androidx-compose = { module = "androidx.activity:activity-compose", version.ref = "activityktx" }
lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigation" }
compose-constraintlayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "constraintlayoutcompose" }
compose-composables-core = { module = "com.composables:core", version.ref = "composablesCore" }

androidx-compose-runtime = { group = "androidx.compose.runtime", name = "runtime" }
androidx-compose-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-compose-foundation-layout = { group = "androidx.compose.foundation", name = "foundation-layout" }
androidx-compose-material = { group = "androidx.compose.material", name = "material" }
androidx-compose-material-icons-extended = { group = "androidx.compose.material", name = "material-icons-extended" }
androidx-compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "foundation" }
androidx-compose-animation = { group = "androidx.compose.animation", name = "animation" }
androidx-compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-compose-runtime-livedata = { group = "androidx.compose.runtime", name = "runtime-livedata" }
androidx-composeui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-compose-material3 = { group = "androidx.compose.material3", name = "material3" }
compose-hilt-navigation = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "composeHiltNavigation" }
#compose debug
androidx-compose-runtime-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
#compose test
androidx-compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-compose-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-compose-ui-test = { group = "androidx.compose.ui", name = "ui-test" }

#==================================================================================================#

#===== 第三方开源库 implementation======#
#retrofit
retrofit-retrofit2 = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
retrofit-rxjava2 = { module = "com.squareup.retrofit2:adapter-rxjava2", version.ref = "retrofit" }
retrofit-converter-scalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit" }
retrofit-okhttp3 = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp3" }
retrofit-okhttp3-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp3" }
retrofit-okhttp3-sse = { module = "com.squareup.okhttp3:okhttp-sse", version.ref = "okhttp3" }
#timber
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
#coil
coil = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-gif = { module = "io.coil-kt:coil-gif", version.ref = "coil" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coilCompose" }
#security
security = { module = "androidx.security:security-crypto", version.ref = "security" }
clearEditText = { module = "com.github.lany192:ClearEditText", version.ref = "clearEditText" }
qrcode = {module = "com.google.zxing:core", version.ref = "qrcode"}
commonsCodec = {module = "commons-codec:commons-codec", version.ref = "commons-codec"}
groupedRecyclerView = {module = "com.github.donkingliang:GroupedRecyclerViewAdapter", version.ref = "groupedRecycler"}
glideLibrary = {module = "com.github.bumptech.glide:glide", version.ref = "glideLibrary"}
glideTransformations= {module = "jp.wasabeef:glide-transformations", version.ref = "glideTransformations"}
#==================================================================================================#

#=====第三方辅助开源库 debugImplementation =====#
#leakcanary
leakcanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanary" }
#permissionx
permissionx = { module = "com.permissionx.guolindev:permissionx", version.ref = "permissionx" }
#glance
glance = { module = "com.guolindev.glance:glance", version.ref = "glance" }

baseRecyclerViewAdapterHelper = { module = "com.github.CymChad:BaseRecyclerViewAdapterHelper", version.ref = "cymChad" }
#SmartRefreshLayout
refresh-layout-kernel = { module = "io.github.scwang90:refresh-layout-kernel", version.ref = "scwang" }
refresh-header-classics = { module = "io.github.scwang90:refresh-header-classics", version.ref = "scwang" }
refresh-footer-classics = { module = "io.github.scwang90:refresh-footer-classics", version.ref = "scwang" }

#==================================================================================================#

#=====单元测试 testImplementation & androidTestImplementation =====#
#test-java testImplementation
test-junit = { module = "junit:junit", version.ref = "junit" }
test-core = { module = "androidx.test:core", version.ref = "testcore" }
test-mockito = { module = "org.mockito:mockito-core", version.ref = "mockito" }
test-robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
#test-android androidTestImplementation
test-truth = { module = "com.google.truth:truth", version.ref = "truth" }
test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "extjunit" }
test-runner = { module = "androidx.test:runner", version.ref = "runner" }
test-rules = { module = "androidx.test:rules", version.ref = "runner" }
test-espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
core-test = { module = "androidx.arch.core:core-testing", version.ref = "coretesting" }
#kotlin_test testImplementation
test-mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
#kotlin_test androidTestImplementation
coroutines-testing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxcoroutinestest" }
#hilt_test kaptAndroidTest
hilt-compiler-test = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
#hilt_test androidTestImplementation
hilt-android-test = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
#==================================================================================================#

#=====desaysv 内部组件 implementation=====#
lib_utils = { module = "com.desaysv.adas:lib_utils", version.ref = "lib_utils" }
lib_widget = { module = "com.desaysv.adas:lib_widget", version.ref = "lib_widget" }
hmicomponents = { module = "com.desaysv.hmi:HMIComponents", version.ref = "hmicomponents" }
systemarch = { module = "com.desaysv.ivi.hmi.systemarch:systemarch", version.ref = "systemarch" }
vdbus = { module = "com.desaysv.ivi:vdbus", version.ref = "vdbus" }
svbutton = { module = "com.desaysv.hmi:sv_button", version.ref = "sv_button" }
svdialog = { module = "com.desaysv.hmi:sv_dialog", version.ref = "sv_dialog" }
svprogressbar = { module = "com.desaysv.hmi:sv_progress_bar", version.ref = "sv_progress_bar" }
svseekbar = { module = "com.desaysv.hmi:sv_seekbar", version.ref = "sv_seekbar" }
svswitch = { module = "com.desaysv.hmi:sv_switch", version.ref = "sv_switch" }
svtablayout = { module = "com.desaysv.hmi:sv_tab_layout", version.ref = "sv_tab_layout" }
svtimeselector = { module = "com.desaysv.hmi:sv_time_selector", version.ref = "sv_time_selector" }
kotlin-bom = { group = "org.jetbrains.kotlin", name = "kotlin-bom", version.ref = "kotlin-bom" }
sv-account-sdk = { module = "sv.account:account-sdk", version.ref = "sv-account-sdk" }
sv-bigdata-sdk = { module = "com.desaysv.bigdata:bigdataSdk", version.ref = "sv-bigdata-sdk-version" }
bouncycastle-bcprov = { module = "org.bouncycastle:bcprov-jdk15to18", version.ref = "sv-bouncycastle" }
bouncycastle-bcpkix = { module = "org.bouncycastle:bcpkix-jdk15to18", version.ref = "sv-bouncycastle" }
bouncycastle-bctls = { module = "org.bouncycastle:bctls-jdk15to18", version.ref = "sv-bouncycastle" }
licenses-online = { module = "com.desaysv.licenses_online:licenses", version.ref = "licenses_online" }
desaysv-licenses = { module = "com.desaysv.licenses:licenses", version.ref = "licenses_desaysv" }
aha-okhttputils = { module = "com.zhy:okhttputils", version.ref = "okhttputils" }
aha-mmkv = { module = "com.tencent:mmkv", version.ref = "aha-mmkv" }
#==================================================================================================#

[bundles]
androidx = ["androidx-appcompat", "androidx-annotation", "androidx-legacysupport", "androidx-cardview", "androidx-recyclerview", "androidx-constraintlayout", "androidx-material", "androidx-fragment"]
navigation = ["navigation-fragment", "navigation-ui"]
lifecycle = ["lifecycle-viewmodel", "lifecycle-runtime-ktx", "lifecycle-livedata", "activity-ktx"]
room = ["room-ktx", "room-runtime"]
room-kapt = ["room-kapt"]
hilt = ["hilt-android"]
hilt-kapt = ["hilt-compiler"]
retrofit = ["retrofit-retrofit2", "retrofit-gson", "retrofit-rxjava2", "retrofit-converter-scalars", "retrofit-okhttp3", "retrofit-okhttp3-interceptor", "retrofit-okhttp3-sse"]
kotlin = ["kotlin-core", "kotlin-coroutine"]
coil = ["coil", "coil-gif", "coil-compose"]
test-java = ["test-junit", "test-core", "test-mockito", "test-robolectric"]
test-android = ["test-truth", "test-runner", "test-espresso", "androidx-compose-ui-test-manifest", "androidx-compose-ui-test-junit4", "androidx-compose-ui-test", "hilt-android-test",
    "test-robolectric", "test-ext-junit", "test-rules", "core-test"]
test-kapt-android = ["hilt-compiler-test"]
androidx-compose = ["androidx-compose-runtime", "androidx-compose-material", "androidx-compose-ui", "androidx-compose-ui-tooling" ,"androidx-compose-foundation-layout", "androidx-compose-material-icons-extended", "androidx-compose", "lifecycle-viewmodel-compose","compose-hilt-navigation",
    "navigation-compose", "androidx-compose-foundation", "androidx-compose-animation", "androidx-compose-ui-tooling-preview", "androidx-compose-runtime-livedata", "androidx-composeui-graphics", "androidx-compose-material3", "compose-constraintlayout","compose-composables-core"]
androidx-compose-debug = ["androidx-compose-runtime-ui-tooling", "androidx-compose-ui-test-manifest"]
smartRefreshLayout = ["refresh-layout-kernel", "refresh-header-classics", "refresh-footer-classics"]

#==================================================================================================#

[plugins]
application = { id = "com.android.application", version.ref = "application" }
library = { id = "com.android.library", version.ref = "application" }
kotlin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinkapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlinextensions = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
navigation = { id = "androidx.navigation.safeargs", version.ref = "navigation" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
#==================================================================================================#